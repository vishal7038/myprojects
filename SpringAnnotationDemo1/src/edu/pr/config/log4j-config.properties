#Loggers may be assigned levels. The set of possible levels, that is :DEBUG<INFO<WARN<ERROR<FATAL
# rootLogger can be: INFO, DEBUG, TRACE, 
#when level is set to INFO all the logs will be printed higher than INFO i.e. WARN,ERROR,FATAL including INFO.No Debugs will be printed
# stdout is for printing logs on Console
# logfile is for printing logs in log file. 
log4j.rootLogger=DEBUG, stdout, logfile

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#ConversionPattern is to specify the format of the logs.
log4j.appender.stdout.layout.ConversionPattern=%d %p [%c : %L] - %m%n

#TOMCAT_HOME=D:\softwares\Apache Software\apache-tomcat-7.0.37\apache-tomcat-7.0.37
#log4j.appender.logfile.File=${TOMCAT_HOME}\logs\SpringWebDemo-log.txt

#logfile named as SpringAnnotationDemo.log will log all the information,when size of file exceeds specified size(her 1024KB),new log file will be generated named as letragraphix_log1.txt.

log4j.appender.logfile=org.apache.log4j.RollingFileAppender
log4j.appender.logfile.File=E:\SpringAnnotationDemo\SpringAnnotationDemo.log
log4j.appender.logfile.MaxFileSize=1024KB
# Keep backup files. MaxBackupIndex is set to 10 here so no of total no of  files will be 10.
log4j.appender.logfile.MaxBackupIndex=10
# Pattern to output: date priority [category] - message
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern=%d %p [%c : %L] - %m%n

# Set the level at particular Package
log4j.logger.org.hibernate=WARN
log4j.logger.org.springframework=WARN
